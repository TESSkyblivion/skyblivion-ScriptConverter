<?php
namespace Ormin\OBSLexicalParser\DI;

use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsPCAMurdererFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5ValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5ObjectCallFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5ObjectCallArgumentsFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5ReferenceFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5ExpressionFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5VariableAssignationFactory;
use Ormin\OBSLexicalParser\TES5\Factory\TES5ObjectPropertyFactory;
use Ormin\OBSLexicalParser\TES4\Context\ESMAnalyzer;
use Ormin\OBSLexicalParser\TES5\Factory\TES5PrimitiveValueFactory;
use Ormin\OBSLexicalParser\TES5\Service\TES5TypeInferencer;
use Ormin\OBSLexicalParser\TES5\Service\MetadataLogService;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ReturnFalseFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ReturnTrueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\NotSupportedFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\FillerFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\DefaultFunctionFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\RenamedFunctionFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\PopCalledRenameFunctionFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ActivateFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\AddScriptPackageFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\AutosaveFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\CastFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ClearOwnershipFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\CreateFullActorCopyFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\DisablePlayerControlsFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\EnableFastTravelFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\EnablePlayerControlsFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ForceActorValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ForceWeatherFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetActionRefFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetActorValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetAmountSoldStolenFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetAngleFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetArmorRatingFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetBaseActorValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetButtonPressedFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetClothingValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetContainerFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetCrimeGoldFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetCurrentTimeFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetDayOfWeekFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetDetectedFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetDispositionFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetDistanceFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetGameSettingFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetInCellFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetInSameCellFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetInWorldspaceFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetIsCurrentPackageFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetIsCurrentWeatherFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetIsIdFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetIsRaceFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetIsReferenceFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetIsSexFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetItemCountFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCFactionMurderFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCFactionAttackFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCFactionStealFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCFameFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCInfamyFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCIsRaceFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPCIsSexFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPlayerInSEWorldFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetPosFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetRandomPercentFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetSecondsPassedFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GetSelfFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\GoToJailFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\HasMagicEffectFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsActionRefFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsActorFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsOwnerFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsPCSleepingFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsPlayerInJailFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsRainingFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\IsSpellTargetFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\LockFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\MenumodeFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\MessageBoxFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\MessageFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ModActorValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ModCrimeGoldFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ModDispositionFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ModPCFameFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ModPCInfamyFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\PayFineFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\PlayGroupFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\PlaySound3DFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\PlaySoundFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ReleaseWeatherOverrideFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\RemoveMeFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ResetHealthFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ResurrectFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\RotateFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SayToFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SayFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetActorAlphaFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetActorValueFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetAlertFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetAngleFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetCellPublicFlagFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetCrimeGoldFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetForceRunFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetForceSneakFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetOpenStateFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetOwnershipFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetPCFactionAttackFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetPCFactionMurderFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetPCFactionStealFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetPCFameFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetPCInfamyFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetPosFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\SetWeatherFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\ShowMapFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\StartConversationFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\StopCombatFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\StopLookFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\StopQuestFactory;
use Ormin\OBSLexicalParser\TES5\Factory\Functions\UnlockFactory;

;

class TES5ValueFactoryFunctionFiller
{

    /**
     * Injects function handlers to value factory, as only two-way link in whole project
     * @param TES5ValueFactory $valueFactory
     */
    public function fillFunctions(TES5ValueFactory $valueFactory, TES5ObjectCallFactory $objectCallFactory, TES5ObjectCallArgumentsFactory $objectCallArgumentsFactory, TES5ReferenceFactory $referenceFactory, TES5ExpressionFactory $expressionFactory, TES5VariableAssignationFactory $assignationFactory, TES5ObjectPropertyFactory $objectPropertyFactory, ESMAnalyzer $analyzer, TES5PrimitiveValueFactory $primitiveValueFactory, TES5TypeInferencer $typeInferencer, MetadataLogService $metadataLogService)
    {
        $valueFactory->addFunctionFactory("activate", new ActivateFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("addachievement", new FillerFactory());
        $valueFactory->addFunctionFactory("additem", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("addscriptpackage", new AddScriptPackageFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("addspell", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("addtopic", new PopCalledRenameFunctionFactory("Add", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("autosave", new AutosaveFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("cast", new CastFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("clearownership", new ClearOwnershipFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("closecurrentobliviongate", new FillerFactory());
        $valueFactory->addFunctionFactory("closeobliviongate", new FillerFactory());
        $valueFactory->addFunctionFactory("completequest", new PopCalledRenameFunctionFactory("CompleteQuest", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("createfullactorcopy", new CreateFullActorCopyFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("deletefullactorcopy", new RenamedFunctionFactory("Delete", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("disablelinkedpathpoints", new FillerFactory());
        $valueFactory->addFunctionFactory("disableplayercontrols", new DisablePlayerControlsFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("disable", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("dispel", new RenamedFunctionFactory("DispelSpell", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("dropme", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("drop", new RenamedFunctionFactory("DropObject", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("duplicateallitems", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("enablefasttravel", new EnableFastTravelFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("enablelinkedpathpoints", new FillerFactory());
        $valueFactory->addFunctionFactory("enableplayercontrols", new EnablePlayerControlsFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("enable", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("equipitem", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("essentialdeathreload", new FillerFactory());
        $valueFactory->addFunctionFactory("evaluatepackage", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("forceactorvalue", new ForceActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("forcecloseobliviongate", new FillerFactory());
        $valueFactory->addFunctionFactory("forceweather", new ForceWeatherFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getactionref", new GetActionRefFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getactorvalue", new GetActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getamountsoldstolen", new GetAmountSoldStolenFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getangle", new GetAngleFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getarmorrating", new GetArmorRatingFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getattacked", new RenamedFunctionFactory("IsInCombat", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getbaseactorvalue", new GetBaseActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getbuttonpressed", new GetButtonPressedFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getclothingvalue", new GetClothingValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getcombattarget", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getcontainer", new GetContainerFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getcrimegold", new GetCrimeGoldFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getcrimeknown", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("getcrime", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getcurrentaipackage", new RenamedFunctionFactory("GetCurrentPackage", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getcurrentaiprocedure", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getcurrenttime", new GetCurrentTimeFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getdayofweek", new GetDayOfWeekFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getdeadcount", new PopCalledRenameFunctionFactory("GetDeadCount", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getdead", new RenamedFunctionFactory("IsDead", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getdestroyed", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getdetected", new GetDetectedFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getdisabled", new RenamedFunctionFactory("IsDisabled", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getdisposition", new GetDispositionFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getdistance", new GetDistanceFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getequipped", new RenamedFunctionFactory("IsEquipped", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getfactionrank", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getforcesneak", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("getgamesetting", new GetGameSettingFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getgold", new RenamedFunctionFactory("GetGoldAmount", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getheadingangle", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getincell", new GetInCellFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getinfaction", new RenamedFunctionFactory("IsInFaction", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getinsamecell", new GetInSameCellFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getinworldspace", new GetInWorldspaceFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getisalerted", new RenamedFunctionFactory("IsAlerted", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getiscurrentpackage", new GetIsCurrentPackageFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getiscurrentweather", new GetIsCurrentWeatherFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getisid", new GetIsIdFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getisplayablerace", new NotSupportedFactory());
        $valueFactory->addFunctionFactory("getisplayerbirthsign", new NotSupportedFactory());
        $valueFactory->addFunctionFactory("getisrace", new GetIsRaceFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getisreference", new GetIsReferenceFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getissex", new GetIsSexFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getitemcount", new GetItemCountFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getknockedstate", new ReturnTrueFactory());
        $valueFactory->addFunctionFactory("getlevel", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getlocked", new RenamedFunctionFactory("IsLocked", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getlos", new RenamedFunctionFactory("HasLOS", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getopenstate", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getparentref", new RenamedFunctionFactory("GetEnableParent", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getpcexpelled", new PopCalledRenameFunctionFactory("IsPlayerExpelled", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getpcfactionmurder", new GetPCFactionMurderFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcfactionattack", new GetPCFactionAttackFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcfactionsteal", new GetPCFactionStealFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcfame", new GetPCFameFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcinfamy", new GetPCInfamyFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcisrace", new GetPCIsRaceFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcissex", new GetPCIsSexFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpcmiscstat", new NotSupportedFactory());
        $valueFactory->addFunctionFactory("getplayercontrolsdisabled", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("getplayerinseworld", new GetPlayerInSEWorldFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getpos", new GetPosFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getquestrunning", new PopCalledRenameFunctionFactory("IsRunning", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getrandompercent", new GetRandomPercentFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getrestrained", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getsecondspassed", new GetSecondsPassedFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getself", new GetSelfFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getshouldattack", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("getsleeping", new RenamedFunctionFactory("GetSleepState", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getstagedone", new PopCalledRenameFunctionFactory("GetStageDone", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getstage", new PopCalledRenameFunctionFactory("GetStage", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getstartingangle", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("getstartingpos", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("gettalkedtopc", new ReturnTrueFactory());
        $valueFactory->addFunctionFactory("getweaponanimtype", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("gotojail", new GoToJailFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("hasmagiceffect", new HasMagicEffectFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("hasvampirefed", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("isactionref", new IsActionRefFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("isactorusingatorch", new RenamedFunctionFactory("IsTorchOut", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isactor", new IsActorFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("isanimplaying", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isessential", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isguard", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isidleplaying", new ReturnTrueFactory());
        $valueFactory->addFunctionFactory("isincombat", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isindangerouswater", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("isininterior", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isowner", new IsOwnerFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("ispcamurderer", new IsPCAMurdererFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("ispcsleeping", new IsPCSleepingFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("isplayerinjail", new IsPlayerInJailFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("israining", new IsRainingFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("isridinghorse", new RenamedFunctionFactory("IsOnMount", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("issneaking", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isspelltarget", new IsSpellTargetFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("isswimming", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("istalking", new RenamedFunctionFactory("IsInDialogueWithPlayer", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("istimepassing", new ReturnTrueFactory());
        $valueFactory->addFunctionFactory("isweaponout", new RenamedFunctionFactory("IsWeaponDrawn", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("isxbox", new ReturnFalseFactory());
        $valueFactory->addFunctionFactory("kill", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("lock", new LockFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("look", new RenamedFunctionFactory("SetLookAt", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("menumode", new MenumodeFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("messagebox", new MessageBoxFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("message", new MessageFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("modactorvalue", new ModActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("modcrimegold", new ModCrimeGoldFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("moddisposition", new ModDispositionFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("modfactionreaction", new PopCalledRenameFunctionFactory("ModReaction", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("modpcfame", new ModPCFameFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("modpcinfamy", new ModPCInfamyFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("modpcmiscstat", new FillerFactory());
        $valueFactory->addFunctionFactory("movetomarker", new RenamedFunctionFactory("MoveTo", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("moveto", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("payfine", new PayFineFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("pickidle", new FillerFactory());
        $valueFactory->addFunctionFactory("placeatme", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("playgroup", new PlayGroupFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("playmagiceffectvisuals", new FillerFactory());
        $valueFactory->addFunctionFactory("playmagicshadervisuals", new FillerFactory());
        $valueFactory->addFunctionFactory("playsound3d", new PlaySound3DFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("playsound", new PlaySoundFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("purgecellbuffers", new FillerFactory());
        $valueFactory->addFunctionFactory("pushactoraway", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("refreshtopiclist", new FillerFactory());
        $valueFactory->addFunctionFactory("releaseweatheroverride", new ReleaseWeatherOverrideFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("removeallitems", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("removeitem", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("removeme", new RemoveMeFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("removescriptpackage", new FillerFactory());
        $valueFactory->addFunctionFactory("removespell", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("reset3dstate", new RenamedFunctionFactory("Reset", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("resetfalldamagetimer", new FillerFactory());
        $valueFactory->addFunctionFactory("resethealth", new ResetHealthFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("resetinterior", new PopCalledRenameFunctionFactory("Reset", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("resurrect", new ResurrectFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("rotate", new RotateFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("sayto", new SayToFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("say", new SayFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("sendtrespassalarm", new FillerFactory());
        $valueFactory->addFunctionFactory("setactoralpha", new SetActorAlphaFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setactorfullname", new FillerFactory());
        $valueFactory->addFunctionFactory("setactorrefraction", new FillerFactory());
        $valueFactory->addFunctionFactory("setactorsai", new RenamedFunctionFactory("EnableAI", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setactorvalue", new SetActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setalert", new SetAlertFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setallreachable", new FillerFactory());
        $valueFactory->addFunctionFactory("setallvisible", new FillerFactory());
        $valueFactory->addFunctionFactory("setangle", new SetAngleFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setcellpublicflag", new SetCellPublicFlagFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setclass", new FillerFactory());
        $valueFactory->addFunctionFactory("setcombatstyle", new FillerFactory());
        $valueFactory->addFunctionFactory("setcrimegold", new SetCrimeGoldFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setdestroyed", new RenamedFunctionFactory("BlockActivation", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setdoordefaultopen", new FillerFactory());
        $valueFactory->addFunctionFactory("setessential", new PopCalledRenameFunctionFactory("SetEssential", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setfactionrank", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setfactionreaction", new PopCalledRenameFunctionFactory("SetReaction", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setforcerun", new SetForceRunFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setforcesneak", new SetForceSneakFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setghost", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setignorefriendlyhits", new FillerFactory());
        $valueFactory->addFunctionFactory("setinvestmentgold", new FillerFactory());
        $valueFactory->addFunctionFactory("setitemvalue", new FillerFactory());
        $valueFactory->addFunctionFactory("setnoavoidance", new FillerFactory());
        $valueFactory->addFunctionFactory("setnorumors", new FillerFactory());
        $valueFactory->addFunctionFactory("setopenstate", new SetOpenStateFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setownership", new SetOwnershipFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setpackduration", new FillerFactory());
        $valueFactory->addFunctionFactory("setpcexpelled", new PopCalledRenameFunctionFactory("SetPlayerExpelled", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setpcfactionattack", new SetPCFactionAttackFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setpcfactionmurder", new SetPCFactionMurderFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setpcfactionsteal", new SetPCFactionStealFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setpcfame", new SetPCFameFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setpcinfamy", new SetPCInfamyFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setplayerinseworld", new FillerFactory());
        $valueFactory->addFunctionFactory("setpos", new SetPosFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setquestobject", new FillerFactory());
        $valueFactory->addFunctionFactory("setrestrained", new FillerFactory());
        $valueFactory->addFunctionFactory("setrigidbodymass", new FillerFactory());
        $valueFactory->addFunctionFactory("setscale", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setsceneiscomplex", new FillerFactory());
        $valueFactory->addFunctionFactory("setshowquestitems", new FillerFactory());
        $valueFactory->addFunctionFactory("setstage", new PopCalledRenameFunctionFactory("SetStage", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setunconscious", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("setweather", new SetWeatherFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("showbirthsignmenu", new FillerFactory());
        $valueFactory->addFunctionFactory("showclassmenu", new FillerFactory());
        $valueFactory->addFunctionFactory("showdialogsubtitles", new FillerFactory());
        $valueFactory->addFunctionFactory("showenchantment", new FillerFactory());
        $valueFactory->addFunctionFactory("showmap", new ShowMapFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("showracemenu", new FillerFactory());
        $valueFactory->addFunctionFactory("showspellmaking", new FillerFactory());
        $valueFactory->addFunctionFactory("startcombat", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("startconversation", new StartConversationFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("startquest", new PopCalledRenameFunctionFactory("Start", $referenceFactory, $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("stopcombatalarmonactor", new RenamedFunctionFactory("StopCombatAlarm", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("stopcombat", new StopCombatFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("stoplook", new StopLookFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("stopmagiceffectvisuals", new FillerFactory());
        $valueFactory->addFunctionFactory("stopmagicshadervisuals", new FillerFactory());
        $valueFactory->addFunctionFactory("stopwaiting", new FillerFactory());
        $valueFactory->addFunctionFactory("stopquest", new StopQuestFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("trapupdate", new FillerFactory());
        $valueFactory->addFunctionFactory("triggerhitshader", new FillerFactory());
        $valueFactory->addFunctionFactory("unequipitem", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("unlock", new UnlockFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("wait", new FillerFactory());
        $valueFactory->addFunctionFactory("wakeuppc", new NotSupportedFactory());
        $valueFactory->addFunctionFactory("yield", new DefaultFunctionFactory($objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("evp", new RenamedFunctionFactory("EvaluatePackage", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("forceav", new ForceActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("fw", new ForceWeatherFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getav", new GetActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getbaseav", new GetBaseActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getgs", new GetGameSettingFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("getiscreature", new IsActorFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("this", new GetSelfFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("isactordetected", new RenamedFunctionFactory("IsInCombat", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("modav", new ModActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("modpcskill", new ModActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("pme", new FillerFactory());
        $valueFactory->addFunctionFactory("pms", new FillerFactory());
        $valueFactory->addFunctionFactory("pcb", new FillerFactory());
        $valueFactory->addFunctionFactory("scripteffectelapsedseconds", new GetSecondsPassedFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("saa", new SetActorAlphaFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("setav", new SetActorValueFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
        $valueFactory->addFunctionFactory("sme", new FillerFactory());
        $valueFactory->addFunctionFactory("scaonactor", new RenamedFunctionFactory("StopCombatAlarm", $objectCallFactory, $objectCallArgumentsFactory));
        $valueFactory->addFunctionFactory("sms", new FillerFactory());
        $valueFactory->addFunctionFactory("sw", new SetWeatherFactory($valueFactory, $objectCallFactory, $objectCallArgumentsFactory, $referenceFactory, $expressionFactory, $assignationFactory, $objectPropertyFactory, $analyzer, $primitiveValueFactory, $typeInferencer, $metadataLogService));
    }
}